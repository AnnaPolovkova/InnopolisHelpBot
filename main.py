# coding=utf-8
import sqlite3
from parse_bonuses import get_bonuses
from parse_FAQ import get_links
from parse_news import get_links2
from parse_success_stories import get_links3
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton


bot = Bot('')
dp = Dispatcher(bot, storage=MemoryStorage())
conn = sqlite3.connect('info.db') # Потом поменяем
sql = conn.cursor()

class Queue(StatesGroup):
    firstt = State()
    second = State()
    third = State()
    fourth = State()

def kb():
    return ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)

def bt(message):
    return KeyboardButton(message)

def start_kb():
    button_1 = bt('Учебные программы')
    button_2 = bt('Поступление')
    button_3 = bt('Жизнь студента')
    button_4 = bt('Другое')
    st_kn = kb().add(button_1, button_2, button_3, button_4)
    return st_kn

# Старт бота
@dp.message_handler(commands=['start'], state=None)
async def bot_start(message: types.Message):
    await bot.send_message(message.from_user.id, """Здравствуйте! Это телеграм-бот для интересующихся поступлением в университет Innopolis абитуриентов. Вам нужно выбрать несколько категорий. Что бы вы хотели узнать?""", reply_markup=start_kb())
    await Queue.firstt.set()

def Handlerfirstt(message):
    answers = {
        "учебные программы": ["""Учебные программы делятся на 3 группы. Какая вам интересна?""", kb().add(bt('Бакалавриат'), bt('Магистратура'), bt('Аспирантура'))],
        "поступление": ["""Здесь находится информация о поступлении в университет Innopolis. Дальше вам требуется снова выбрать одну из категорий.""", 
                        kb().add(bt('День открытых дверей'), bt('Приемная кампания 2023/24'), 
                        bt('Платное обучение'), bt('Как поступить?'), bt('Грант'), bt('Олимпиадные бонусы'))],
        "жизнь студента": ["""Университет Иннополис предоставляет студентам широкие возможности для самореализации. В вузе работает большое количество творческих и научных клубов, проводятся спортивные и инженерные соревнования
Вам интересно узнать о проживании в городе или о последних новостях и событиях?""", kb().add(bt('Проживание'), bt('Новости и события'))],
        "другое": ["Здесь находится другая информация о университете Innopolis.", kb().add(bt('Истории студентов'), bt('Часто задаваемые вопросы'), bt('Контакты'))],
    }
    if message.lower() not in answers:
        return ["", ""]
    return answers[message.lower()]

@dp.message_handler(state=Queue.firstt)
async def firstt(message: types.Message, state: FSMContext):
    if (isinstance(message.text, str) and message.text == '/start'):
        await bot.send_message(message.from_user.id, """Здравствуйте! Это телеграм-бот для интересующихся поступлением в университет Innopolis абитуриентов. Вам нужно выбрать несколько категорий. Что бы вы хотели узнать?""", reply_markup=start_kb())
        await Queue.first()
        return
    handler = Handlerfirstt(message.text)
    if (handler == ["", ""]):
        # Провекра остальных вложен.
        await bot.send_message(message.from_user.id, "Простите, но вы ввели некорректный запрос. Попробуйте снова", reply_markup=start_kb())
    else:
        handler[1] = handler[1].add(bt('Назад'))
        await state.update_data(firstt=handler)
        await bot.send_message(message.from_user.id, handler[0], reply_markup=handler[1])
        await Queue.next()

def HandlerSecond(message): # None - клавиатура пред.
    answers = {
        "бакалавриат": ["""Программа разработана совместно с мировыми экспертами в сфере информатики, робототехники и программной инженерии с опытом работы в топ-100 вузов мира в партнерстве с компаниями IT‑индустрии. Мы создали учебную программу, которая с первого дня учебы позволяет студентам развивать ключевые компетенции и навыки работы в реальных условиях""", kb().add(bt("Профили подготовки"), bt("Структура обучения(бакалавриат)"))],
        "магистратура": ["""Магистратура
Вы хотите узнать о профилях подготовки или о том, как поступить?
Существует 5 профилей подготовки в бакалавриате. Выберите наиболее интересную:""", kb().add(bt('программная инженерия'), bt('ИСКУССТВЕННЫЙ ИНТЕЛЛЕКТ И ИНЖЕНЕРИЯ ДАННЫХ'.lower()), 
bt('ИНФОРМАЦИОННОЕ ТЕХНОЛОГИЧЕСКОЕ ПРЕДПРИНИМАТЕЛЬСТВО'.lower()), bt('РОБОТОТЕХНИКА И КОМПЬЮТЕРНОЕ ЗРЕНИЕ'.lower()), bt('ИНЖЕНЕРИЯ БЕЗОПАСНОСТИ СИСТЕМ И СЕТЕЙ'.lower()))],
        "аспирантура": ["""НАПРАВЛЕНИЕ ПОДГОТОВКИ
«Математическое моделирование, численные методы и комплексы программ»
для молодых ученых и будущих преподавателей, которые интересуются исследованиями в области компьютерных наук и 
обладают опытом исследовательской или прикладной деятельности в области информационных технологий.
3 года очного обучения
Обучение на английском языке. Форма обучения – очная

100% грант покрывает 100% стоимости обучения и ежемесячную стипендию в размере 36 000 рублей.
Частичный грант покрывает 30%, 50%, 70% стоимости обучения. Есть возможность получать стипендию за активную внеучебную деятельность.""", kb().add(bt('Направления исследований'),
bt('Критерии отбора'), bt('Структура обучения(аспирантура)'))],
        "день открытых дверей": ["""Вы узнаете о возможностях получения образования в нашем университете, познакомитесь с кампусом и научно-исследовательским корпусом.
https://apply.innopolis.university/open-day/?lang=ru&id=12&site=s1&template=university24&landing_mode=edit
Университет Иннополис приглашает посетить Дни открытых дверей абитуриентов, увлечённых сферой ИТ, а также их родителей и педагогов. Для участия необходимо зарегистрироваться.

Регистрация позволит получить:
- допуск в здание Университета
- инструкции организаторов мероприятия""", None],
        "приемная кампания 2023/24": ["""Немного интересных фактов:
260 баллов для гарантированного поступления
(при успешном прохождении конкурса и одобренном 100% гранте)
157 бюджетных мест
99,36 средний балл ЕГЭ на бюджет в 2022

А теперь выберете категорию, наиболее вас интересующую:""", kb().add(bt('сроки приёмной компании'), bt('критерии отбора'), bt('материалы для подготовки'), bt('документы для зачисления'), bt('карьерные перспективы'), bt('основные курсы'))],
        "платное обучение": ["""
Преимущества поступления на коммерческой основе
• Предоставляется место в кампусе
2–5-местные апартаменты с кухней и ванной оснащены всей необходимой мебелью и техникой. За вами будет закреплено место в кампусе.

• Возможность перевода на бесплатное обучение
Перевод доступен со 2 курса при соблюдении условии:
- 2 семестра закрыты без оценок "удовлетворительно";
- наличие свободных мест;
- положительное решение комиссии по переводу.


• Нет обязательной отработки
После окончания университета у вас не будет обязательств по отработке - можно устроиться в любую компанию или открыть свою собственную.


• Гарантия поступления

180 баллов ЕГЭ по трем предметам, своевременная подача документов и оплата гарантируют вам поступление в университет.


• Персональные экскурсии и индивидуальные консультации
Специалисты университета ответят на все интересующие вас вопросы, расскажут об особенностях вуза и учебного процесса, проведут экскурсию по кампусу.


• Не нужно готовиться к олимпиадам и набирать 100 баллов на ЕГЭ
Чтобы поступить в ИТ-вуз, не обязательно годами готовиться к олимпиадам и экзаменам. Базовые знания и понимание принципов решения задач позволят набрать необходимые 180 баллов.
Поступить:
http://commercial.innopolis.ru/?utm_source=apply.innopolis.university""", None],
        "как поступить?": ["На какую программу вы хотите поступить?", kb().add(bt('Поступление Бакалавриат'), bt('Поступление Магистратура'), bt('Поступление Аспирантура'))],
        "грант": ["""
Грант — это полная или частичная оплата обучения при условии, что кандидат прошел Конкурсный отбор. 



Университет Иннополис предоставляет как 100%, так и частичные гранты, покрывающие от 30 до 70% стоимости учебы. 

Конкурс проводится ежегодно с декабря по август. Разыгрывается 200 грантовых мест в бакалавриате, 100 грантовых мест в магистратуре, 15 грантовых мест в аспирантуре.
Существует несколько видов: грант университета Innopolis, грант передовой инженерной формы, грант компаний партнёров.
Больше информации:  https://apply.innopolis.university/grant""", None],
        "олимпиадные бонусы": [get_bonuses, None],
        "проживание": ["""Кампус университета Иннополис

Студенты проживают в комфортабельных номерах с отдельной кухней и санузлом, оборудованных всей необходимой бытовой техникой и мебелью. На территории кампуса доступен бесплатный Wi-Fi, для студентов работают клининг-сервис и прачечная, есть столовая. Корпуса соединены между собой пешеходной галереей, которая плавно перетекает в здание университета. Большое внимание уделяется безопасности, поэтому на территории жилого комплекса действует пропускной режим.
Город Иннополис

Университет расположен в городе высоких технологий – Иннополисе (40 км от Казани). Это площадка для создания, тестирования и внедрения разработок, таких как беспилотное такси, роботы-доставщики, дронопорты, 5G-интернет и др.""", None],
        "новости и события": [get_links2, None],
        "истории студентов": [get_links3, None],
        "часто задаваемые вопросы": [get_links, InlineKeyboardMarkup(), 0],
        "контакты": ["""Режим работы:
пн-пт 9:00-18:00 (время московское) 
    +7 (843) 203-92-53
university@innopolis.ru
420500, г. Иннополис ул.Университетская, д.1
Отдел по работе со студентами  319@innopolis.ru""", None],
        "назад": ["Back", None]
    }
    if message.lower() not in answers:
        return ["", ""]
    return answers[message.lower()]

@dp.message_handler(state=Queue.second)
async def Second(message: types.Message, state: FSMContext):
    if (isinstance(message.text, str) and message.text == '/start'):
        await bot.send_message(message.from_user.id, """Здравствуйте! Это телеграм-бот для интересующихся поступлением в университет Innopolis абитуриентов. Вам нужно выбрать несколько категорий. Что бы вы хотели узнать?""", reply_markup=start_kb())
        await Queue.first()
        return
    handler = HandlerSecond(message.text)
    if (handler == ["", ""]):
        # Провекра остальных вложен.
        data = await state.get_data()
        temp = data.get("firstt")
        await bot.send_message(message.from_user.id, "Простите, но вы ввели некорректный запрос. Попробуйте снова", reply_markup=temp[1])
    else:
        if (handler[0] == "Back"):
            await bot.send_message(message.from_user.id, "Назад", reply_markup=start_kb())
            await Queue.previous()
        elif (handler[1] is None):
            if (not isinstance(handler[0], str)):
                data = await state.get_data()
                temp = data.get("firstt")
                handler[1] = temp[1]
                temp = handler[0]()
                for i in temp:
                    await bot.send_message(message.from_user.id, f"{i[0]}\n{i[1]}", reply_markup=handler[1])
                if (message.text.lower() == "олимпиадные бонусы"):
                    document = open('olimps.xlsx', 'rb')
                    
                    await bot.send_document(message.from_user.id, document=document)
            else:
                await bot.send_message(message.from_user.id, handler[0], reply_markup=handler[1])
        elif (len(handler) == 3):
            g = handler[0]()
            text = ""
            for i in range(1, min(6, len(g))):
                handler[1].add(InlineKeyboardButton(text=f"{i}", callback_data=i))
                text += f"{i}." + g[i][0] + "\n"
            await state.update_data(second=[g, handler[1], handler[2]])
            await bot.send_message(message.from_user.id, text, reply_markup=handler[1])
        else:
            handler[1] = handler[1].add(bt('Назад'))
            await state.update_data(second=handler)
            await bot.send_message(message.from_user.id, handler[0], reply_markup=handler[1])
            await Queue.next()

@dp.callback_query_handler(state=Queue.second)
async def Dalee(call: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()
    temp = data.get("second")
    await call.message.answer(temp[0][int(call.data)][1])
    await bot.answer_callback_query(callback_query_id=call.id)

def HandlerThird(message): # None - клавиатура пред.
    answers = {
        "профили подготовки": ["Существует 2 профиля подготовки в бакалавриате. Выберите наиболее интересную.", kb().add(bt("Анализ данных и искусственный интеллект"), bt('Инженерия информационных систем'))],
        "структура обучения(бакалавриат)": ["""
Программа длится 4 года обучения. 3 из них — это академическое обучение, а 4-й год посвящён закреплению навыков и работе в индустрии.
После четырех лет в Иннополисе ты будешь крутым специалистом с хорошей академической базой и целым годом индустриального опыта. 

Выберете наиболее интересную категорию.""", kb().add(bt('Годовая стажировка в индустрии'), bt('Специализация по трекам'), bt('Фундаментальные курсы'))],
        "программная инженерия": ["""
        Профиль "Программная инженерия"

Программа для ИТ-специалистов с опытом работы в индустрии. Обучение позволит вырасти технически, научиться эффективно работать в команде и расширить понимание всех аспектов разработки.
Язык обучения – английский.
https://apply.innopolis.university/master/development/?lang=ru&id=12&site=s1&template=university24&landing_mode=edit?lang=ru&id=12&site=s1&template=university24&landing_mode=edit""", None],
        "искусственный интеллект и инженерия данных": ["""
Профиль "Искусственный интеллект и инженерия данных"

Основная цель программы – обучить студентов современным технологиям искусственного интеллекта и различным аспектам работы с данными. Для тех, кто хочет заниматься исследованиями в области машинного обучения и разработкой систем, использующих анализ данных и технологии ИИ.
Язык обучения – английский. 
https://apply.innopolis.university/master/datascience/?lang=ru&id=12&site=s1&template=university24&landing_mode=edit?lang=ru&id=12&site=s1&template=university24&landing_mode=edit""", None],
        "информационное технологическое предпринимательство": ["""
Профиль "Информационное технологическое предпринимательство"

Программа рассчитана на фаундеров, готовых начать бизнес сразу во время обучения. Можно защитить стартап как диплом, создать готовый жизнеспособный продукт и официально работать на себя в статусе предпринимателя.
Язык обучения – английский. 
https://apply.innopolis.university/master/technological-entrepreneurship/?lang=ru&id=12&site=s1&template=university24&landing_mode=edit?lang=ru&id=12&site=s1&template=university24&landing_mode=edit""", None],
        "инженерия безопасности систем и сетей": ["""Профиль "Инженерия безопасности систем и сетей"

Программа позволит сконцентрироваться на изучении концепций и принципов в области компьютерной безопасности и сетевой инженерии, применить полученные знания на практике, столкнуться с задачами, которые позволят подготовить к реальным ситуациям в индустрии.
Язык обучения – английский.  
https://apply.innopolis.university/master/securityandnetworkengineering/?lang=ru&id=12&site=s1&template=university24&landing_mode=edit?lang=ru&id=12&site=s1&template=university24&landing_mode=edit""", None],
        "робототехника и компьютерное зрение": ["""Профиль "Робототехника и компьютерное зрение"

Программа основана на лучших мировых практиках в робототехнике. Обучение сделает профессионалом в области мехатроники, управления, прототипирования. Научит решать сложные технические задачи в сфере беспилотных систем и промышленной робототехники.
Язык обучения – русский.
https://apply.innopolis.university/master/robotics/?lang=ru&id=12&site=s1&template=university24&landing_mode=edit?lang=ru&id=12&site=s1&template=university24&landing_mode=edit""", None],
        "направления исследований": ["""
Есть 4 направления исследований в аспирантуре:

— Машинное обучение (наука о данных, большие данные)/ Machine learning (Data science, big data)
— Робототехника/ Robotics
— Информационная безопасность/ Information security
— Разработка программного обеспечения/ Software""", None],
        "критерии отбора": ["""
Критерии отбора:

— Высшее образование (специалитет, магистратура) в области компьютерных, технических или физико-математических наук
— Средний балл по диплому не ниже 4,5
— Английский язык Intermediate и выше

Преимущества:
• опыт преподавательской деятельности в области компьютерных наук
• наличие научных публикаций в изданиях, входящих в базы Web of science, Scopus
• наличие международного сертификата по английскому языку (IELTS 6.0 и выше, TOEFL 80 и выше).""", None],
        "структура обучения(аспирантура)": ["""
Структура обучения:
—Научный компонент
Научная деятельность, направленная на подготовку диссертации к защите
Подготовка и оформление диссертации к защите
Подготовка публикаций и (или) заявки на патент 
—Образовательный компонент
История и философия науки
Иностранный язык
Математическое моделирование, численные методы и комплексы программ
Педагогическая практика 
Итоговая аттестация
Оценка подготовленной диссертации""", None],
        "сроки приёмной компании": ["""Прием заявок для поступающих в бакалавриат по гранту в 2022 г. завершен
Все заявки, зарегистрированные позднее 20 июня 2022 года конкурсная комиссия рассмотрит при отборе кандидатов, поступающих в 2023 году. Если по каким-либо причинам вы зарегистрировали заявку раньше старта кампании 2023 - сообщите вашему куратору в чате личного кабинета об этом и убедитесь, что ваша заявка в порядке. 
Помните, что создание нескольких заявок является нарушением условий Конкурса и может привести к исключению из участия в нем. Отборочные испытания новой кампании начнутся в декабре. Очные отборы проводятся с января по июнь.""", None],
        "материалы для подготовки": ["""
Здесь вы найдете примеры заданий прошлых лет, которые помогут подготовиться к участию в Конкурсе. Задания соответствуют тем, что предстоит пройти на заочном и очном этапах Конкурса. Задачи по программированию проходят только на 2м (очном) этапе.
Математика  https://innopolis.university/filespublic/2022ProfTestMath.pdf
Информатика  https://innopolis.university/filespublic/2022ProfTestInf.pdf
Английский язык  https://innopolis.university/filespublic/2022%20English.pdf
Программирование  https://innopolis.university/filespublic/contest-31323-ru.pdf""", None],
        "карьерные перспективы": ["""
Карьерные перспективы
Ты можешь создавать беспилотные автомобили, дроны и роботов, покоривших космос. Можешь создавать алгоритмы искусственного интеллекта от прогноза биржевых котировок до выявления болезней на ранних стадиях. Ты можешь обеспечивать безопасность информационных сетей и работать над масштабными проектами по цифровизации предприятий. Всем этим занимаются инженеры-исследователи, ведущие аналитики данных, разработчики софта и проект-менеджеры.


В 2020 году 100% выпускников получили приглашения на работу от компаний-партнеров Университета Иннополис – ООО "Маркетплейс-технологии", ООО "Яндекс.Технологии", ООО "Тинькофф Центр Разработки", ООО "Контур Инновации", ООО "ИТ ИКС 5 ТЕХНОЛОГИИ", АО "Почта России", ООО "Озон Технологии", ПАО Сбербанк, ООО "С7 ТЕХЛАБ", ООО "Групп Айби Сиай", ООО "МТС ЛАБ", ООО "Сорамитсу Лабс", АО "БАРС Груп", ООО "ФИКС", ООО "ДжиДиСи Сервисез" и другие. Выпускники университета занимают ведущие должности в ИТ-компаниях.""", None],
        "основные курсы": ["""С учебным планом можно ознакомиться по файлу выше""", None],
        "документы для зачисления": ["DOCS", None],
        "критерии отбора": ["""
Критерии отбора
• Высокая успеваемость по математике и информатике

• Базовые навыки программирования

• Английский язык — уровень Intermediate и выше

• Личные достижения: участие в олимпиадах, конкурсах, конференциях (приоритет ИТ-достижениям)
Ссылка на видео \/
https://youtu.be/lTbycVWmLvU""", None],
        "поступление бакалавриат": [[
"""Для поступления в бакалавриат:

Подайте заявку на нашем сайте: заполните анкету, прикрепите портфолио и пройдите онлайн-тесты на проверку IT-навыков и знания английского языка в личном кабинете абитуриента
https://apply.innopolis.ru/get-in/tests/?lang=ru&id=12&site=s1&template=university24&landing_mode=edit?lang=ru&id=12&site=s1&template=university24&landing_mode=edit""",
"""При положительном результате рассмотрения заявки мы пригласим вас на отбор. В программе: оценка IT-навыков и знания английского языка, собеседование с профессорами на английском языке, оценка личностных качеств.""",
"""При успешном прохождении отбора вы получите грант на обучение. Для зачисления нужно успешно сдать ЕГЭ по математике, информатике (или физике) и русскому языку. """
        ], None],
        "поступление магистратура": [[
"""Для поступления в магистратуру:

1. Зарегистрироваться в личном кабинете
2. Заполнить анкету
3. Прикрепить резюме и мотивационное письмо на английском языке
4. Пройти онлайн-тесты: профильный и на знание английского языка
5. Отправить заявку на рассмотрение
https://apply.innopolis.ru/get-in/tests/?lang=ru&id=12&site=s1&template=university24&landing_mode=edit?lang=ru&id=12&site=s1&template=university24&landing_mode=edit""",
"""При положительном результате рассмотрения заявки мы пригласим вас на второй тур отборов, который пройдет дистанционно.

Программа включает:

– профильное тестирование
– тестирование по английскому языку
– интервью с профессором на английском языке
– оценка soft skills""",
"""Отборочная комиссия сообщит о результате отбора по электронной почте. При успешном прохождении отбора вы получите грант на обучение и в августе станете студентом университета."""
        ], None],
        "поступление аспирантура": [[
"""Для поступления в аспирантуру:

Зарегистрируйтесь на сайте, полностью заполните анкету и прикрепите документы (резюме и мотивационное письмо на английском языке, диплом/выписку из зачетной книжки с отметками об успеваемости), пройдите тест. После этого отправьте заявку на рассмотрение отборочной комиссии в личном кабинете абитуриента.
https://apply.innopolis.ru/get-in/tests/?lang=ru&id=12&site=s1&template=university24&landing_mode=edit?lang=ru&id=12&site=s1&template=university24&landing_mode=edit""",
"""При положительном результате рассмотрения заявки мы пригласим вас на 2 тур отбора. В программе: тестирование по математике, собеседование с руководителем аспирантуры и профессорами на английском языке, выявление личностных качеств, проверка уровня владения английским языком.""",
"""Отборочная комиссия сообщит о результате отбора по электронной почте. При успешном прохождении отбора вы получите грант на обучение и станете аспирантом Университета Иннополис."""
        ], None],
        "назад": ["Back", None]
    }
    if message.lower() not in answers:
        return ["", ""]
    return answers[message.lower()]

@dp.message_handler(state=Queue.third)
async def Third(message: types.Message, state: FSMContext):
    if (isinstance(message.text, str) and message.text == '/start'):
        await bot.send_message(message.from_user.id, """Здравствуйте! Это телеграм-бот для интересующихся поступлением в университет Innopolis абитуриентов. Вам нужно выбрать несколько категорий. Что бы вы хотели узнать?""", reply_markup=start_kb())
        await Queue.first()
        return
    handler = HandlerThird(message.text)
    if (handler == ["", ""]):
        # Провекра остальных вложен.
        data = await state.get_data()
        temp = data.get("second")
        await bot.send_message(message.from_user.id, "Простите, но вы ввели некорректный запрос. Попробуйте снова", reply_markup=temp[1])
    else:
        if (handler[0] == "Back"):
            data = await state.get_data()
            temp = data.get("firstt")
            await bot.send_message(message.from_user.id, "Назад", reply_markup=temp[1])
            await Queue.previous()
        elif (handler[1] is None):
            if (not isinstance(handler[0], str)):
                for i in handler[0]:
                    await bot.send_message(message.from_user.id, i, reply_markup=handler[1])
            else:
                if (message.text.lower() == "документы для зачисления"):
                    await bot.send_message(message.from_user.id, """С 20 июня в приёмную комиссию Университета Иннополис необходимо подать следующий список документов:
1. Копия заполненных страниц паспорта
2. Аттестат/диплом (аттестат+приложение / диплом+приложение для выпускников средне-специальных учебных заведений (СПО)
3. 2 фотографии, размер 3*4, цветные на белом фоне (без уголка)
4. Копия военного билета или приписного свидетельства (для кандидатов мужского пола)
5. Копия ИНН
6. Копия СНИЛС
7. Справка о группе здоровья для занятий физкультурой""", reply_markup=handler[1])
                    await bot.send_message(message.from_user.id, "Информация о поступлении\nИнформация о приеме на 2023/24 учебный год по образовательным программам высшего образования – программам бакалавриата, магистратуры и аспирантуры.", reply_markup=handler[1])
                    await bot.send_message(message.from_user.id, "https://innopolis.university/sveden/apply/", reply_markup=handler[1])
                    return
                if (message.text.lower() == "основные курсы"):
                    # document = open('OverviewOfTheBSProgram1.pdf', 'rb')
                    document = 'BQACAgIAAxkDAAIFM2PxMhyDhxSqOFO0gd3hiha_PxC9AAITLAAC8AOJS_vdGXOvXRm0LgQ'
                    await bot.send_document(message.from_user.id, document=document)
                await bot.send_message(message.from_user.id, handler[0], reply_markup=handler[1])
        else:
            handler[1] = handler[1].add(bt('Назад'))
            await state.update_data(third=handler)
            await bot.send_message(message.from_user.id, handler[0], reply_markup=handler[1])
            await Queue.next()

def HandlerFourth(message): # None - клавиатура пред.
    answers = {
        "анализ данных и искусственный интеллект": ("""
Технологии искусственного интеллекта (ИИ) меняют жизнь вокруг нас. Основную роль в прорыве ИИ играют анализ данных и машинное обучение. Новая программа бакалавриата Университета Иннополис поможет получить базовые знания для понимания принципа работы, совершенствования и применения этих технологий в построении программных продуктов.

Язык обучения - английский. """, None),
        "инженерия информационных систем": ("""
Профиль для тех, кто увлечен программированием, хочет заниматься разработкой софта или компьютерной безопасностью. Позволяет получить знания в области компьютерных наук и математики, необходимые для дальнейшего обучения и развития в ИТ. Студенты изучают основы программирования, компьютерную архитектуру, проектирование, логику, дискретную математику, математический анализ и линейную алгебру, что позволяет в процессе работы грамотно выбирать и применять методы и инструменты.""", None),
        "годовая стажировка в индустрии": ("""
Практико-ориентированный бакалавриат — это уникальная особенность Иннополиса. Получив знания за три года формального обучения, ты проведешь целый год в индустрии. IT — это прикладная сфера, навыки решают все. Наша задача сделать тебя сильным специалистом, который сможет принести пользу и быть востребованным в индустрии.""", None),
        "специализация по трекам": ("""
Две специализации в рамках профиля Инженерия информационных систем:
• Разработка программного обеспечения
• Кибербезопасность

Три специализации в рамках профиля Анализ данных и искусственный интеллект:
• Анализ данных и машинное обучение
• Прикладной искусственный интеллект
• Робототехника""", None), 
        "фундаментальные курсы": ("""
На этом этапе закладывается фундамент. Два столпа — это компьютерные науки и математика. Ты будешь изучать основы программирования, компьютерную архитектуру, проектирование, логику, дискретную математику, математический анализ, линейную алгебру. Сложно переоценить важность этих знаний! Это то, что отличает университетское образование от онлайн-курсов, где учат пользоваться инструментами вслепую.""", None),
        "назад": ["Back", None]
    }
    if message.lower() not in answers:
        return ["", ""]
    return answers[message.lower()]

@dp.message_handler(state=Queue.fourth)
async def Fourth(message: types.Message, state: FSMContext):
    if (isinstance(message.text, str) and message.text == '/start'):
        await bot.send_message(message.from_user.id, """Здравствуйте! Это телеграм-бот для интересующихся поступлением в университет Innopolis абитуриентов. Вам нужно выбрать несколько категорий. Что бы вы хотели узнать?""", reply_markup=start_kb())
        await Queue.first()
        return
    handler = HandlerFourth(message.text)
    if (handler == ["", ""]):
        # Провекра остальных вложен.
        data = await state.get_data()
        temp = data.get("third")
        await bot.send_message(message.from_user.id, "Простите, но вы ввели некорректный запрос. Попробуйте снова", reply_markup=temp[1])
    else:
        if (handler[0] == "Back"):
            data = await state.get_data()
            temp = data.get("second")
            print(data)
            await bot.send_message(message.from_user.id, "Назад", reply_markup=temp[1])
            await Queue.previous()
        else:
            await bot.send_message(message.from_user.id, handler[0], reply_markup=handler[1])

if __name__ == '__main__':
    executor.start_polling(dp)